
StepperInterface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000754  000007e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000754  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080010c  0080010c  000007f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000824  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000df7  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097e  00000000  00000000  000016fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000839  00000000  00000000  00002079  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000028b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000679  00000000  00000000  00002a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000072b  00000000  00000000  000030cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000037f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	2e c2       	rjmp	.+1116   	; 0x492 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e5       	ldi	r30, 0x54	; 84
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e0       	ldi	r26, 0x0C	; 12
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 31       	cpi	r26, 0x1E	; 30
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f8 d2       	rcall	.+1520   	; 0x6b4 <main>
  c4:	45 c3       	rjmp	.+1674   	; 0x750 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TickFct_StepperA>:
		while( !(UCSR0A & (1 << UDRE0)) );
		UDR0 = sendMe;
	}
	else {
		while( !(UCSR1A & (1 << UDRE1)) );
		UDR1 = sendMe;
  c8:	82 30       	cpi	r24, 0x02	; 2
  ca:	91 05       	cpc	r25, r1
  cc:	99 f0       	breq	.+38     	; 0xf4 <TickFct_StepperA+0x2c>
  ce:	3c f4       	brge	.+14     	; 0xde <TickFct_StepperA+0x16>
  d0:	00 97       	sbiw	r24, 0x00	; 0
  d2:	09 f4       	brne	.+2      	; 0xd6 <TickFct_StepperA+0xe>
  d4:	61 c0       	rjmp	.+194    	; 0x198 <TickFct_StepperA+0xd0>
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	09 f4       	brne	.+2      	; 0xdc <TickFct_StepperA+0x14>
  da:	7a c0       	rjmp	.+244    	; 0x1d0 <TickFct_StepperA+0x108>
  dc:	08 c0       	rjmp	.+16     	; 0xee <TickFct_StepperA+0x26>
  de:	84 30       	cpi	r24, 0x04	; 4
  e0:	91 05       	cpc	r25, r1
  e2:	09 f4       	brne	.+2      	; 0xe6 <TickFct_StepperA+0x1e>
  e4:	41 c0       	rjmp	.+130    	; 0x168 <TickFct_StepperA+0xa0>
  e6:	a4 f1       	brlt	.+104    	; 0x150 <TickFct_StepperA+0x88>
  e8:	05 97       	sbiw	r24, 0x05	; 5
  ea:	09 f4       	brne	.+2      	; 0xee <TickFct_StepperA+0x26>
  ec:	49 c0       	rjmp	.+146    	; 0x180 <TickFct_StepperA+0xb8>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	08 95       	ret
  f4:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <Stepper_1>
  f8:	22 23       	and	r18, r18
  fa:	d9 f0       	breq	.+54     	; 0x132 <TickFct_StepperA+0x6a>
  fc:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <Stepper_5>
 100:	88 23       	and	r24, r24
 102:	69 f0       	breq	.+26     	; 0x11e <TickFct_StepperA+0x56>
 104:	21 50       	subi	r18, 0x01	; 1
 106:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <Stepper_1>
 10a:	81 50       	subi	r24, 0x01	; 1
 10c:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Stepper_5>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	98 e0       	ldi	r25, 0x08	; 8
 114:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 118:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 11c:	72 c0       	rjmp	.+228    	; 0x202 <TickFct_StepperA+0x13a>
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <Stepper_1>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	98 e0       	ldi	r25, 0x08	; 8
 128:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 12c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 130:	7b c0       	rjmp	.+246    	; 0x228 <TickFct_StepperA+0x160>
 132:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <Stepper_5>
 136:	22 23       	and	r18, r18
 138:	09 f4       	brne	.+2      	; 0x13c <TickFct_StepperA+0x74>
 13a:	83 c0       	rjmp	.+262    	; 0x242 <TickFct_StepperA+0x17a>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	98 e0       	ldi	r25, 0x08	; 8
 140:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 144:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	20 93 15 01 	sts	0x0115, r18	; 0x800115 <Stepper_5>
 14e:	4c c0       	rjmp	.+152    	; 0x1e8 <TickFct_StepperA+0x120>
 150:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cnt.1840>
 154:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cnt.1840+0x1>
 158:	00 97       	sbiw	r24, 0x00	; 0
 15a:	e9 f1       	breq	.+122    	; 0x1d6 <TickFct_StepperA+0x10e>
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 162:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 166:	60 c0       	rjmp	.+192    	; 0x228 <TickFct_StepperA+0x160>
 168:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cnt.1840>
 16c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cnt.1840+0x1>
 170:	00 97       	sbiw	r24, 0x00	; 0
 172:	a1 f1       	breq	.+104    	; 0x1dc <TickFct_StepperA+0x114>
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 17a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 17e:	34 c0       	rjmp	.+104    	; 0x1e8 <TickFct_StepperA+0x120>
 180:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <cnt.1840>
 184:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <cnt.1840+0x1>
 188:	00 97       	sbiw	r24, 0x00	; 0
 18a:	59 f1       	breq	.+86     	; 0x1e2 <TickFct_StepperA+0x11a>
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <cnt.1840+0x1>
 192:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <cnt.1840>
 196:	35 c0       	rjmp	.+106    	; 0x202 <TickFct_StepperA+0x13a>
 198:	83 e0       	ldi	r24, 0x03	; 3
 19a:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <i.1839>
 19e:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <cnt.1840+0x1>
 1a2:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <cnt.1840>
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	08 95       	ret
 1ac:	81 50       	subi	r24, 0x01	; 1
 1ae:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <i.1839>
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	08 95       	ret
 1b8:	81 50       	subi	r24, 0x01	; 1
 1ba:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <i.1839>
 1be:	84 e0       	ldi	r24, 0x04	; 4
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	08 95       	ret
 1c4:	81 50       	subi	r24, 0x01	; 1
 1c6:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <i.1839>
 1ca:	85 e0       	ldi	r24, 0x05	; 5
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	08 95       	ret
 1d0:	82 e0       	ldi	r24, 0x02	; 2
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	08 95       	ret
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	08 95       	ret
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	08 95       	ret
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	08 95       	ret
 1e8:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <i.1839>
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	ec 5f       	subi	r30, 0xFC	; 252
 1f0:	fe 4f       	sbci	r31, 0xFE	; 254
 1f2:	80 81       	ld	r24, Z
 1f4:	85 b9       	out	0x05, r24	; 5
 1f6:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1839>
 1fa:	81 11       	cpse	r24, r1
 1fc:	dd cf       	rjmp	.-70     	; 0x1b8 <TickFct_StepperA+0xf0>
 1fe:	83 e0       	ldi	r24, 0x03	; 3
 200:	dc cf       	rjmp	.-72     	; 0x1ba <TickFct_StepperA+0xf2>
 202:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1839>
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	fc 01       	movw	r30, r24
 20a:	e8 5f       	subi	r30, 0xF8	; 248
 20c:	fe 4f       	sbci	r31, 0xFE	; 254
 20e:	dc 01       	movw	r26, r24
 210:	ac 5f       	subi	r26, 0xFC	; 252
 212:	be 4f       	sbci	r27, 0xFE	; 254
 214:	20 81       	ld	r18, Z
 216:	8c 91       	ld	r24, X
 218:	82 2b       	or	r24, r18
 21a:	85 b9       	out	0x05, r24	; 5
 21c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1839>
 220:	81 11       	cpse	r24, r1
 222:	d0 cf       	rjmp	.-96     	; 0x1c4 <TickFct_StepperA+0xfc>
 224:	83 e0       	ldi	r24, 0x03	; 3
 226:	cf cf       	rjmp	.-98     	; 0x1c6 <TickFct_StepperA+0xfe>
 228:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <i.1839>
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	e8 5f       	subi	r30, 0xF8	; 248
 230:	fe 4f       	sbci	r31, 0xFE	; 254
 232:	80 81       	ld	r24, Z
 234:	85 b9       	out	0x05, r24	; 5
 236:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1839>
 23a:	81 11       	cpse	r24, r1
 23c:	b7 cf       	rjmp	.-146    	; 0x1ac <TickFct_StepperA+0xe4>
 23e:	83 e0       	ldi	r24, 0x03	; 3
 240:	b6 cf       	rjmp	.-148    	; 0x1ae <TickFct_StepperA+0xe6>
 242:	08 95       	ret

00000244 <TickFct_StepperB>:
 244:	82 30       	cpi	r24, 0x02	; 2
 246:	91 05       	cpc	r25, r1
 248:	99 f0       	breq	.+38     	; 0x270 <TickFct_StepperB+0x2c>
 24a:	3c f4       	brge	.+14     	; 0x25a <TickFct_StepperB+0x16>
 24c:	00 97       	sbiw	r24, 0x00	; 0
 24e:	09 f4       	brne	.+2      	; 0x252 <TickFct_StepperB+0xe>
 250:	61 c0       	rjmp	.+194    	; 0x314 <TickFct_StepperB+0xd0>
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	09 f4       	brne	.+2      	; 0x258 <TickFct_StepperB+0x14>
 256:	7a c0       	rjmp	.+244    	; 0x34c <TickFct_StepperB+0x108>
 258:	08 c0       	rjmp	.+16     	; 0x26a <TickFct_StepperB+0x26>
 25a:	84 30       	cpi	r24, 0x04	; 4
 25c:	91 05       	cpc	r25, r1
 25e:	09 f4       	brne	.+2      	; 0x262 <TickFct_StepperB+0x1e>
 260:	41 c0       	rjmp	.+130    	; 0x2e4 <TickFct_StepperB+0xa0>
 262:	a4 f1       	brlt	.+104    	; 0x2cc <TickFct_StepperB+0x88>
 264:	05 97       	sbiw	r24, 0x05	; 5
 266:	09 f4       	brne	.+2      	; 0x26a <TickFct_StepperB+0x26>
 268:	49 c0       	rjmp	.+146    	; 0x2fc <TickFct_StepperB+0xb8>
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	08 95       	ret
 270:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <Stepper_10>
 274:	22 23       	and	r18, r18
 276:	d9 f0       	breq	.+54     	; 0x2ae <TickFct_StepperB+0x6a>
 278:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <Stepper_25>
 27c:	88 23       	and	r24, r24
 27e:	69 f0       	breq	.+26     	; 0x29a <TickFct_StepperB+0x56>
 280:	21 50       	subi	r18, 0x01	; 1
 282:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <Stepper_10>
 286:	81 50       	subi	r24, 0x01	; 1
 288:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <Stepper_25>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	98 e0       	ldi	r25, 0x08	; 8
 290:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 294:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 298:	72 c0       	rjmp	.+228    	; 0x37e <TickFct_StepperB+0x13a>
 29a:	21 50       	subi	r18, 0x01	; 1
 29c:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <Stepper_10>
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	98 e0       	ldi	r25, 0x08	; 8
 2a4:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 2a8:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 2ac:	7b c0       	rjmp	.+246    	; 0x3a4 <TickFct_StepperB+0x160>
 2ae:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <Stepper_25>
 2b2:	22 23       	and	r18, r18
 2b4:	09 f4       	brne	.+2      	; 0x2b8 <TickFct_StepperB+0x74>
 2b6:	83 c0       	rjmp	.+262    	; 0x3be <TickFct_StepperB+0x17a>
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	98 e0       	ldi	r25, 0x08	; 8
 2bc:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 2c0:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 2c4:	21 50       	subi	r18, 0x01	; 1
 2c6:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <Stepper_25>
 2ca:	4c c0       	rjmp	.+152    	; 0x364 <TickFct_StepperB+0x120>
 2cc:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <cnt.1867>
 2d0:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <cnt.1867+0x1>
 2d4:	00 97       	sbiw	r24, 0x00	; 0
 2d6:	e9 f1       	breq	.+122    	; 0x352 <TickFct_StepperB+0x10e>
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 2de:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 2e2:	60 c0       	rjmp	.+192    	; 0x3a4 <TickFct_StepperB+0x160>
 2e4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <cnt.1867>
 2e8:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <cnt.1867+0x1>
 2ec:	00 97       	sbiw	r24, 0x00	; 0
 2ee:	a1 f1       	breq	.+104    	; 0x358 <TickFct_StepperB+0x114>
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 2f6:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 2fa:	34 c0       	rjmp	.+104    	; 0x364 <TickFct_StepperB+0x120>
 2fc:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <cnt.1867>
 300:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <cnt.1867+0x1>
 304:	00 97       	sbiw	r24, 0x00	; 0
 306:	59 f1       	breq	.+86     	; 0x35e <TickFct_StepperB+0x11a>
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <cnt.1867+0x1>
 30e:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <cnt.1867>
 312:	35 c0       	rjmp	.+106    	; 0x37e <TickFct_StepperB+0x13a>
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 31a:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <cnt.1867+0x1>
 31e:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <cnt.1867>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	08 95       	ret
 328:	81 50       	subi	r24, 0x01	; 1
 32a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 32e:	83 e0       	ldi	r24, 0x03	; 3
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	08 95       	ret
 334:	81 50       	subi	r24, 0x01	; 1
 336:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 33a:	84 e0       	ldi	r24, 0x04	; 4
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	08 95       	ret
 340:	81 50       	subi	r24, 0x01	; 1
 342:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 346:	85 e0       	ldi	r24, 0x05	; 5
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	08 95       	ret
 34c:	82 e0       	ldi	r24, 0x02	; 2
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	08 95       	ret
 352:	82 e0       	ldi	r24, 0x02	; 2
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	08 95       	ret
 358:	82 e0       	ldi	r24, 0x02	; 2
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	08 95       	ret
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	08 95       	ret
 364:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	ec 5f       	subi	r30, 0xFC	; 252
 36c:	fe 4f       	sbci	r31, 0xFE	; 254
 36e:	80 81       	ld	r24, Z
 370:	82 b9       	out	0x02, r24	; 2
 372:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 376:	81 11       	cpse	r24, r1
 378:	dd cf       	rjmp	.-70     	; 0x334 <TickFct_StepperB+0xf0>
 37a:	83 e0       	ldi	r24, 0x03	; 3
 37c:	dc cf       	rjmp	.-72     	; 0x336 <TickFct_StepperB+0xf2>
 37e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	fc 01       	movw	r30, r24
 386:	e8 5f       	subi	r30, 0xF8	; 248
 388:	fe 4f       	sbci	r31, 0xFE	; 254
 38a:	dc 01       	movw	r26, r24
 38c:	ac 5f       	subi	r26, 0xFC	; 252
 38e:	be 4f       	sbci	r27, 0xFE	; 254
 390:	20 81       	ld	r18, Z
 392:	8c 91       	ld	r24, X
 394:	82 2b       	or	r24, r18
 396:	82 b9       	out	0x02, r24	; 2
 398:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 39c:	81 11       	cpse	r24, r1
 39e:	d0 cf       	rjmp	.-96     	; 0x340 <TickFct_StepperB+0xfc>
 3a0:	83 e0       	ldi	r24, 0x03	; 3
 3a2:	cf cf       	rjmp	.-98     	; 0x342 <TickFct_StepperB+0xfe>
 3a4:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	e8 5f       	subi	r30, 0xF8	; 248
 3ac:	fe 4f       	sbci	r31, 0xFE	; 254
 3ae:	80 81       	ld	r24, Z
 3b0:	82 b9       	out	0x02, r24	; 2
 3b2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 3b6:	81 11       	cpse	r24, r1
 3b8:	b7 cf       	rjmp	.-146    	; 0x328 <TickFct_StepperB+0xe4>
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	b6 cf       	rjmp	.-148    	; 0x32a <TickFct_StepperB+0xe6>
 3be:	08 95       	ret

000003c0 <TimerISR>:
 3c0:	cf 92       	push	r12
 3c2:	df 92       	push	r13
 3c4:	ef 92       	push	r14
 3c6:	ff 92       	push	r15
 3c8:	1f 93       	push	r17
 3ca:	cf 93       	push	r28
 3cc:	df 93       	push	r29
 3ce:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <i.1614>
 3d2:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <tasksNum>
 3d6:	88 23       	and	r24, r24
 3d8:	09 f4       	brne	.+2      	; 0x3dc <TimerISR+0x1c>
 3da:	53 c0       	rjmp	.+166    	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	1b e0       	ldi	r17, 0x0B	; 11
 3e0:	c0 91 1c 01 	lds	r28, 0x011C	; 0x80011c <tasks>
 3e4:	d0 91 1d 01 	lds	r29, 0x011D	; 0x80011d <tasks+0x1>
 3e8:	18 9f       	mul	r17, r24
 3ea:	c0 0d       	add	r28, r0
 3ec:	d1 1d       	adc	r29, r1
 3ee:	11 24       	eor	r1, r1
 3f0:	4d 81       	ldd	r20, Y+5	; 0x05
 3f2:	5e 81       	ldd	r21, Y+6	; 0x06
 3f4:	6f 81       	ldd	r22, Y+7	; 0x07
 3f6:	78 85       	ldd	r23, Y+8	; 0x08
 3f8:	89 81       	ldd	r24, Y+1	; 0x01
 3fa:	9a 81       	ldd	r25, Y+2	; 0x02
 3fc:	ab 81       	ldd	r26, Y+3	; 0x03
 3fe:	bc 81       	ldd	r27, Y+4	; 0x04
 400:	48 17       	cp	r20, r24
 402:	59 07       	cpc	r21, r25
 404:	6a 07       	cpc	r22, r26
 406:	7b 07       	cpc	r23, r27
 408:	b0 f0       	brcs	.+44     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40a:	88 81       	ld	r24, Y
 40c:	e9 85       	ldd	r30, Y+9	; 0x09
 40e:	fa 85       	ldd	r31, Y+10	; 0x0a
 410:	08 2e       	mov	r0, r24
 412:	00 0c       	add	r0, r0
 414:	99 0b       	sbc	r25, r25
 416:	09 95       	icall
 418:	88 83       	st	Y, r24
 41a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <i.1614>
 41e:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <tasks>
 422:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <tasks+0x1>
 426:	18 9f       	mul	r17, r24
 428:	e0 0d       	add	r30, r0
 42a:	f1 1d       	adc	r31, r1
 42c:	11 24       	eor	r1, r1
 42e:	15 82       	std	Z+5, r1	; 0x05
 430:	16 82       	std	Z+6, r1	; 0x06
 432:	17 82       	std	Z+7, r1	; 0x07
 434:	10 86       	std	Z+8, r1	; 0x08
 436:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <i.1614>
 43a:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <tasks>
 43e:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <tasks+0x1>
 442:	18 9f       	mul	r17, r24
 444:	e0 0d       	add	r30, r0
 446:	f1 1d       	adc	r31, r1
 448:	11 24       	eor	r1, r1
 44a:	c5 80       	ldd	r12, Z+5	; 0x05
 44c:	d6 80       	ldd	r13, Z+6	; 0x06
 44e:	e7 80       	ldd	r14, Z+7	; 0x07
 450:	f0 84       	ldd	r15, Z+8	; 0x08
 452:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 456:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 45a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 45e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 462:	4c 0d       	add	r20, r12
 464:	5d 1d       	adc	r21, r13
 466:	6e 1d       	adc	r22, r14
 468:	7f 1d       	adc	r23, r15
 46a:	45 83       	std	Z+5, r20	; 0x05
 46c:	56 83       	std	Z+6, r21	; 0x06
 46e:	67 83       	std	Z+7, r22	; 0x07
 470:	70 87       	std	Z+8, r23	; 0x08
 472:	8f 5f       	subi	r24, 0xFF	; 255
 474:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <i.1614>
 478:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <tasksNum>
 47c:	89 17       	cp	r24, r25
 47e:	08 f4       	brcc	.+2      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 480:	af cf       	rjmp	.-162    	; 0x3e0 <TimerISR+0x20>
 482:	df 91       	pop	r29
 484:	cf 91       	pop	r28
 486:	1f 91       	pop	r17
 488:	ff 90       	pop	r15
 48a:	ef 90       	pop	r14
 48c:	df 90       	pop	r13
 48e:	cf 90       	pop	r12
 490:	08 95       	ret

00000492 <__vector_13>:
 492:	1f 92       	push	r1
 494:	0f 92       	push	r0
 496:	0f b6       	in	r0, 0x3f	; 63
 498:	0f 92       	push	r0
 49a:	11 24       	eor	r1, r1
 49c:	0b b6       	in	r0, 0x3b	; 59
 49e:	0f 92       	push	r0
 4a0:	2f 93       	push	r18
 4a2:	3f 93       	push	r19
 4a4:	4f 93       	push	r20
 4a6:	5f 93       	push	r21
 4a8:	6f 93       	push	r22
 4aa:	7f 93       	push	r23
 4ac:	8f 93       	push	r24
 4ae:	9f 93       	push	r25
 4b0:	af 93       	push	r26
 4b2:	bf 93       	push	r27
 4b4:	ef 93       	push	r30
 4b6:	ff 93       	push	r31
 4b8:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <tasksPeriodCntDown>
 4bc:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <tasksPeriodCntDown+0x1>
 4c0:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <tasksPeriodCntDown+0x2>
 4c4:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <tasksPeriodCntDown+0x3>
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	a1 09       	sbc	r26, r1
 4cc:	b1 09       	sbc	r27, r1
 4ce:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <tasksPeriodCntDown>
 4d2:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <tasksPeriodCntDown+0x1>
 4d6:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <tasksPeriodCntDown+0x2>
 4da:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <tasksPeriodCntDown+0x3>
 4de:	89 2b       	or	r24, r25
 4e0:	8a 2b       	or	r24, r26
 4e2:	8b 2b       	or	r24, r27
 4e4:	89 f4       	brne	.+34     	; 0x508 <__vector_13+0x76>
 4e6:	6c df       	rcall	.-296    	; 0x3c0 <TimerISR>
 4e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 4ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 4f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 4f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 4f8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <tasksPeriodCntDown>
 4fc:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <tasksPeriodCntDown+0x1>
 500:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <tasksPeriodCntDown+0x2>
 504:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <tasksPeriodCntDown+0x3>
 508:	ff 91       	pop	r31
 50a:	ef 91       	pop	r30
 50c:	bf 91       	pop	r27
 50e:	af 91       	pop	r26
 510:	9f 91       	pop	r25
 512:	8f 91       	pop	r24
 514:	7f 91       	pop	r23
 516:	6f 91       	pop	r22
 518:	5f 91       	pop	r21
 51a:	4f 91       	pop	r20
 51c:	3f 91       	pop	r19
 51e:	2f 91       	pop	r18
 520:	0f 90       	pop	r0
 522:	0b be       	out	0x3b, r0	; 59
 524:	0f 90       	pop	r0
 526:	0f be       	out	0x3f, r0	; 63
 528:	0f 90       	pop	r0
 52a:	1f 90       	pop	r1
 52c:	18 95       	reti

0000052e <TimerSet>:
 52e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 532:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 536:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 53a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 53e:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <tasksPeriodCntDown>
 542:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <tasksPeriodCntDown+0x1>
 546:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <tasksPeriodCntDown+0x2>
 54a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <tasksPeriodCntDown+0x3>
 54e:	08 95       	ret

00000550 <TimerOn>:
 550:	8b e0       	ldi	r24, 0x0B	; 11
 552:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 556:	8d e7       	ldi	r24, 0x7D	; 125
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 55e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 562:	82 e0       	ldi	r24, 0x02	; 2
 564:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 568:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 56c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 570:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 574:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 578:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 57c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 580:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <tasksPeriodCntDown>
 584:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <tasksPeriodCntDown+0x1>
 588:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <tasksPeriodCntDown+0x2>
 58c:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <tasksPeriodCntDown+0x3>
 590:	8f b7       	in	r24, 0x3f	; 63
 592:	80 68       	ori	r24, 0x80	; 128
 594:	8f bf       	out	0x3f, r24	; 63
 596:	08 95       	ret

00000598 <initUSART>:
 598:	81 30       	cpi	r24, 0x01	; 1
 59a:	81 f0       	breq	.+32     	; 0x5bc <initUSART+0x24>
 59c:	e1 ec       	ldi	r30, 0xC1	; 193
 59e:	f0 e0       	ldi	r31, 0x00	; 0
 5a0:	80 81       	ld	r24, Z
 5a2:	88 61       	ori	r24, 0x18	; 24
 5a4:	80 83       	st	Z, r24
 5a6:	e2 ec       	ldi	r30, 0xC2	; 194
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	80 81       	ld	r24, Z
 5ac:	86 60       	ori	r24, 0x06	; 6
 5ae:	80 83       	st	Z, r24
 5b0:	83 e3       	ldi	r24, 0x33	; 51
 5b2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 5b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 5ba:	08 95       	ret
 5bc:	e9 ec       	ldi	r30, 0xC9	; 201
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	88 61       	ori	r24, 0x18	; 24
 5c4:	80 83       	st	Z, r24
 5c6:	ea ec       	ldi	r30, 0xCA	; 202
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	80 81       	ld	r24, Z
 5cc:	86 60       	ori	r24, 0x06	; 6
 5ce:	80 83       	st	Z, r24
 5d0:	83 e3       	ldi	r24, 0x33	; 51
 5d2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 5d6:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 5da:	08 95       	ret

000005dc <USART_Flush>:
 5dc:	81 30       	cpi	r24, 0x01	; 1
 5de:	29 f4       	brne	.+10     	; 0x5ea <USART_Flush+0xe>
 5e0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 5e4:	88 23       	and	r24, r24
 5e6:	74 f0       	brlt	.+28     	; 0x604 <USART_Flush+0x28>
 5e8:	08 95       	ret
 5ea:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 5ee:	88 23       	and	r24, r24
 5f0:	8c f4       	brge	.+34     	; 0x614 <USART_Flush+0x38>
 5f2:	a6 ec       	ldi	r26, 0xC6	; 198
 5f4:	b0 e0       	ldi	r27, 0x00	; 0
 5f6:	e0 ec       	ldi	r30, 0xC0	; 192
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	8c 91       	ld	r24, X
 5fc:	80 81       	ld	r24, Z
 5fe:	88 23       	and	r24, r24
 600:	e4 f3       	brlt	.-8      	; 0x5fa <USART_Flush+0x1e>
 602:	08 95       	ret
 604:	ae ec       	ldi	r26, 0xCE	; 206
 606:	b0 e0       	ldi	r27, 0x00	; 0
 608:	e8 ec       	ldi	r30, 0xC8	; 200
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	8c 91       	ld	r24, X
 60e:	80 81       	ld	r24, Z
 610:	88 23       	and	r24, r24
 612:	e4 f3       	brlt	.-8      	; 0x60c <USART_Flush+0x30>
 614:	08 95       	ret

00000616 <USART_Receive>:
//Functionality - receives an 8-bit char value
//Parameter: usartNum specifies which USART is waiting to receive data
//Returns: Unsigned char data from the receive buffer
unsigned char USART_Receive(unsigned char usartNum)
{
	if (usartNum != 1) {
 616:	81 30       	cpi	r24, 0x01	; 1
 618:	41 f0       	breq	.+16     	; 0x62a <USART_Receive+0x14>
		while ( !(UCSR0A & (1 << RXC0)) ); // Wait for data to be received
 61a:	e0 ec       	ldi	r30, 0xC0	; 192
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	88 23       	and	r24, r24
 622:	ec f7       	brge	.-6      	; 0x61e <USART_Receive+0x8>
		return UDR0; // Get and return received data from buffer
 624:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 628:	08 95       	ret
	}
	else {
		while ( !(UCSR1A & (1 << RXC1)) );
 62a:	e8 ec       	ldi	r30, 0xC8	; 200
 62c:	f0 e0       	ldi	r31, 0x00	; 0
 62e:	80 81       	ld	r24, Z
 630:	88 23       	and	r24, r24
 632:	ec f7       	brge	.-6      	; 0x62e <USART_Receive+0x18>
		return UDR1;
 634:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
	}
}
 638:	08 95       	ret

0000063a <TickFct_USART>:
enum USART_States { USART_start, USART_init, USART_receiving };
int TickFct_USART(int state)
{
	static unsigned char rec_tmp = 0;
	static unsigned char sed_tmp = 0;
	switch(state) //Transitions
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	21 f0       	breq	.+8      	; 0x646 <TickFct_USART+0xc>
 63e:	8c f1       	brlt	.+98     	; 0x6a2 <TickFct_USART+0x68>
 640:	03 97       	sbiw	r24, 0x03	; 3
 642:	44 f0       	brlt	.+16     	; 0x654 <TickFct_USART+0x1a>
 644:	2e c0       	rjmp	.+92     	; 0x6a2 <TickFct_USART+0x68>
		break;
	}
	switch(state) //Actions
	{
		case USART_init:
			initUSART(0);
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	a7 df       	rcall	.-178    	; 0x598 <initUSART>
			USART_Flush(0);
 64a:	80 e0       	ldi	r24, 0x00	; 0
 64c:	c7 df       	rcall	.-114    	; 0x5dc <USART_Flush>
		break;
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	08 95       	ret
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
 654:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
		
		case USART_receiving:
			if(USART_HasReceived(0))
 658:	88 23       	and	r24, r24
			{
				rec_tmp = USART_Receive(0);
 65a:	34 f5       	brge	.+76     	; 0x6a8 <TickFct_USART+0x6e>
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	db df       	rcall	.-74     	; 0x616 <USART_Receive>
 660:	98 2f       	mov	r25, r24
 662:	90 7c       	andi	r25, 0xC0	; 192
				if ((rec_tmp & 0xC0) == 0x00)
 664:	31 f4       	brne	.+12     	; 0x672 <TickFct_USART+0x38>
				{
					Stepper_1 = rec_tmp & 0x3F;
 666:	8f 73       	andi	r24, 0x3F	; 63
 668:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <Stepper_1>
 66c:	82 e0       	ldi	r24, 0x02	; 2
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	08 95       	ret
				}
				else if ((rec_tmp & 0xC0) == 0x40)
 672:	90 34       	cpi	r25, 0x40	; 64
 674:	31 f4       	brne	.+12     	; 0x682 <TickFct_USART+0x48>
				{
					Stepper_5 = rec_tmp & 0x3F;
 676:	8f 73       	andi	r24, 0x3F	; 63
 678:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <Stepper_5>
 67c:	82 e0       	ldi	r24, 0x02	; 2
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	08 95       	ret
				}
				else if ((rec_tmp & 0xC0) == 0x80)
 682:	90 38       	cpi	r25, 0x80	; 128
 684:	31 f4       	brne	.+12     	; 0x692 <TickFct_USART+0x58>
				{
					Stepper_10 = rec_tmp & 0x3F;
 686:	8f 73       	andi	r24, 0x3F	; 63
 688:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <Stepper_10>
 68c:	82 e0       	ldi	r24, 0x02	; 2
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	08 95       	ret
				}
				else if ((rec_tmp & 0xC0) == 0xC0)
 692:	90 3c       	cpi	r25, 0xC0	; 192
 694:	61 f4       	brne	.+24     	; 0x6ae <TickFct_USART+0x74>
				{
					Stepper_25 = rec_tmp & 0x3F;
 696:	8f 73       	andi	r24, 0x3F	; 63
 698:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <Stepper_25>
 69c:	82 e0       	ldi	r24, 0x02	; 2
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	08 95       	ret
				}
			}
		break;
		
		default:
			state = USART_start;
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	08 95       	ret
 6a8:	82 e0       	ldi	r24, 0x02	; 2
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	08 95       	ret
 6ae:	82 e0       	ldi	r24, 0x02	; 2
 6b0:	90 e0       	ldi	r25, 0x00	; 0
		break;
	}
	return state;
}
 6b2:	08 95       	ret

000006b4 <main>:
	}
	return state;
}

int main(void)
{
 6b4:	cf 93       	push	r28
 6b6:	df 93       	push	r29
 6b8:	cd b7       	in	r28, 0x3d	; 61
 6ba:	de b7       	in	r29, 0x3e	; 62
 6bc:	a1 97       	sbiw	r28, 0x21	; 33
 6be:	0f b6       	in	r0, 0x3f	; 63
 6c0:	f8 94       	cli
 6c2:	de bf       	out	0x3e, r29	; 62
 6c4:	0f be       	out	0x3f, r0	; 63
 6c6:	cd bf       	out	0x3d, r28	; 61
     // initialize ports
     DDRA = 0xFF; PORTA = 0x00;
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	81 b9       	out	0x01, r24	; 1
 6cc:	12 b8       	out	0x02, r1	; 2
     DDRB = 0xFF; PORTB = 0x00;
 6ce:	84 b9       	out	0x04, r24	; 4
 6d0:	15 b8       	out	0x05, r1	; 5
     
     tasksNum = 3; // declare number of tasks
 6d2:	83 e0       	ldi	r24, 0x03	; 3
 6d4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <tasksNum>
     task tsks[3]; // initialize the task array
     tasks = tsks; // set the task array
 6d8:	ce 01       	movw	r24, r28
 6da:	01 96       	adiw	r24, 0x01	; 1
 6dc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <tasks+0x1>
 6e0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <tasks>
     
     // define tasks
     unsigned char i=0; // task counter
     tasks[i].state = USART_start;
 6e4:	19 82       	std	Y+1, r1	; 0x01
     tasks[i].period = 50;
 6e6:	82 e3       	ldi	r24, 0x32	; 50
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	a0 e0       	ldi	r26, 0x00	; 0
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	8a 83       	std	Y+2, r24	; 0x02
 6f0:	9b 83       	std	Y+3, r25	; 0x03
 6f2:	ac 83       	std	Y+4, r26	; 0x04
 6f4:	bd 83       	std	Y+5, r27	; 0x05
     tasks[i].elapsedTime = tasks[i].period;
 6f6:	8e 83       	std	Y+6, r24	; 0x06
 6f8:	9f 83       	std	Y+7, r25	; 0x07
 6fa:	a8 87       	std	Y+8, r26	; 0x08
 6fc:	b9 87       	std	Y+9, r27	; 0x09
     tasks[i].TickFct = &TickFct_USART;
 6fe:	8d e1       	ldi	r24, 0x1D	; 29
 700:	93 e0       	ldi	r25, 0x03	; 3
 702:	9b 87       	std	Y+11, r25	; 0x0b
 704:	8a 87       	std	Y+10, r24	; 0x0a
     ++i;
     tasks[i].state = StepperA_start;
 706:	1c 86       	std	Y+12, r1	; 0x0c
     tasks[i].period = 10;
 708:	8a e0       	ldi	r24, 0x0A	; 10
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	a0 e0       	ldi	r26, 0x00	; 0
 70e:	b0 e0       	ldi	r27, 0x00	; 0
 710:	8d 87       	std	Y+13, r24	; 0x0d
 712:	9e 87       	std	Y+14, r25	; 0x0e
 714:	af 87       	std	Y+15, r26	; 0x0f
 716:	b8 8b       	std	Y+16, r27	; 0x10
     tasks[i].elapsedTime = tasks[i].period;
 718:	89 8b       	std	Y+17, r24	; 0x11
 71a:	9a 8b       	std	Y+18, r25	; 0x12
 71c:	ab 8b       	std	Y+19, r26	; 0x13
 71e:	bc 8b       	std	Y+20, r27	; 0x14
     tasks[i].TickFct = &TickFct_StepperA;
 720:	24 e6       	ldi	r18, 0x64	; 100
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	3e 8b       	std	Y+22, r19	; 0x16
 726:	2d 8b       	std	Y+21, r18	; 0x15
     ++i;
     tasks[i].state = StepperB_start;
 728:	1f 8a       	std	Y+23, r1	; 0x17
     tasks[i].period = 10;
 72a:	88 8f       	std	Y+24, r24	; 0x18
 72c:	99 8f       	std	Y+25, r25	; 0x19
 72e:	aa 8f       	std	Y+26, r26	; 0x1a
 730:	bb 8f       	std	Y+27, r27	; 0x1b
     tasks[i].elapsedTime = tasks[i].period;
 732:	8c 8f       	std	Y+28, r24	; 0x1c
 734:	9d 8f       	std	Y+29, r25	; 0x1d
 736:	ae 8f       	std	Y+30, r26	; 0x1e
 738:	bf 8f       	std	Y+31, r27	; 0x1f
     tasks[i].TickFct = &TickFct_StepperB;
 73a:	82 e2       	ldi	r24, 0x22	; 34
 73c:	91 e0       	ldi	r25, 0x01	; 1
 73e:	99 a3       	std	Y+33, r25	; 0x21
 740:	88 a3       	std	Y+32, r24	; 0x20
     
     TimerSet(10); // value set should be GCD of all tasks
 742:	6a e0       	ldi	r22, 0x0A	; 10
 744:	70 e0       	ldi	r23, 0x00	; 0
 746:	80 e0       	ldi	r24, 0x00	; 0
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	f1 de       	rcall	.-542    	; 0x52e <TimerSet>
     TimerOn();
 74c:	01 df       	rcall	.-510    	; 0x550 <TimerOn>
 74e:	ff cf       	rjmp	.-2      	; 0x74e <main+0x9a>

00000750 <_exit>:
 750:	f8 94       	cli

00000752 <__stop_program>:
 752:	ff cf       	rjmp	.-2      	; 0x752 <__stop_program>
